#!/bin/bash

# Configuracion del scritp
# Definimos la ruta donde vamos a guardar el archivo .htpasswd
HTTPASSWD_DIR=/home/ubuntu
HTTPASSWD_USER=usuario
HTTPASSWD_PASSWD=usuario
# Definimos la contraseña de root como variable
DB_ROOT_PASSWD=root

# ------------------------------------------------------------------------------ Instalación de la pila LEMP ------------------------------------------------------------------------------ 

# Habilitamos el modo de shell para mostrar los comandos que se ejecutan
set -x
# Actualizamos la lista de paquetes
apt-get update
# Instalamos el servidor web Apache -y le decimos que si
apt-get install nginx -y
# Instalamos el sistema gestor de base de datos
apt install mysql-server -y
# Actualizamos la contraseña de root de MySQL
mysql -u root <<< "ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY '$DB_ROOT_PASSWD';" 
mysql -u root <<< "FLUSH PRIVILEGES;"
# Instalamos los módulos necesarios de PHP
apt-get install php-fpm php-mysql -y
# Configuración de php-fpm
sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/7.2/fpm/php.ini
# Reiniciamos el servicio
systemctl restart php7.2-fpm

# Reiniciamos el servicio de nginx
systemctl restart nginx

# ------------------------------------------------------------------------------ Instalamos aplicación web ------------------------------------------------------------------------------ 
# Clonamos el repositorio de la aplicación
cd /var/www/html 
rm -rf iaw-practica-lamp 
git clone https://github.com/josejuansanchez/iaw-practica-lamp
# Introducimos la base de tados
mysql -u root -p$DB_ROOT_PASSWD < /var/www/html/iaw-practica-lamp/db/database.msql
# Movemos el contenido del repositorio al home de html
mv /var/www/html/iaw-practica-lamp/src/*  /var/www/html/

# Eliminamos el archivo Index.html de apache
# rm -rf /var/www/html/index.html
# rm -rf /var/www/html/iaw-practica-lamp/

# Cambiamos permisos 
chown www-data:www-data * -R

# ------------------------------------------------------------------------------ Inslación de herramientas adicionales ------------------------------------------------------------------------------ 
# Descargamos Adminer
mkdir /var/www/html/adminer 
cd /var/www/html/adminer 
wget https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql.php 
mv adminer-4.7.7-mysql.php index.php
# Generamos un password aleatorio para phpMyAdmin
AUTOGENERATED_PASSWD=`tr -dc A-Za-z0-9 < /dev/urandom | head -c 64`
# Configuramos las opciones de instalación de phpMyAdmin
echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | debconf-set-selections 
echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | debconf-set-selections 
echo "phpmyadmin phpmyadmin/mysql/app-pass password $AUTOGENERATED_PASSWD" |debconf-set-selections 
echo "phpmyadmin phpmyadmin/app-password-confirm password $AUTOGENERATED_PASSWD" | debconf-set-selections
# Instalamos phpMyAdmin
apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y


# Creamos archivo info.php y añadimos contenido (peligroso por dar información del sistema) 
# echo "<?php phpinfo (); ?>" > /var/www/html/info.php 


# Instalación de GoAccess
echo "deb http://deb.goaccess.io/ $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list.d/goaccess.list 
wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add - 
apt-get update 
apt-get install goaccess -y

# Creamos el directorio stats.
mkdir /var/www/html/stats

# Lazamos el proceso en segundo plano
nohup goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html &
htpasswd -c -b $HTTPASSWD_DIR/.htpasswd $HTTPASSWD_USER $HTTPASSWD_PASSWD

# Copiamos el archivo de configuracion de apache
cp /home/ubuntu/000-default.conf /etc/apache2/sites-available/
systemctl restart apache2

# ------------------------------------------------------------------------------ 
# TODO: Instalación de la aplicación web propuesta
# ------------------------------------------------------------------------------